{"version":3,"file":"static/js/122.b119d008.chunk.js","mappings":"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","sources":["webpack://slim-mom-app/./src/components/DailyCaloriesForm/DailyCaloriesForm.module.css?4bdd","webpack://slim-mom-app/./src/components/RadioGroup/RadioGroup.module.css?9313","components/RadioGroup/RadioGroup.jsx","webpack://slim-mom-app/./src/components/DailyCalorieIntake/DailyCalorieIntake.module.css?254a","components/DailyCalorieIntake/DailyCalorieIntake.jsx","components/DailyCaloriesForm/DailyCaloriesForm.jsx","webpack://slim-mom-app/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://slim-mom-app/./src/components/TextField/TextField.module.css?b6c9","components/TextField/TextField.jsx","pages/MainPage/MainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DailyCaloriesForm_container__ANzbD\",\"form\":\"DailyCaloriesForm_form__Ri71L\",\"infoContainer\":\"DailyCaloriesForm_infoContainer__9jgNp\",\"info\":\"DailyCaloriesForm_info__TQIKw\",\"bloodTypeContainer\":\"DailyCaloriesForm_bloodTypeContainer__IKO+-\",\"textField\":\"DailyCaloriesForm_textField__CUeTu\",\"button\":\"DailyCaloriesForm_button__HWVOR\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RadioGroup_container__fSCd+\",\"selected\":\"RadioGroup_selected__ed+9a\"};","import React from 'react';\nimport css from './RadioGroup.module.css';\n\nconst RadioGroup = ({options, name, value, onChange}) => {\n    return (\n        <div className={css.container}>\n            {options.map((option, i) => (\n                <div key={i}>\n                    <input\n                        type=\"radio\"\n                        name={name}\n                        value={option.value}\n                        checked={value === option.value}\n                        onChange={onChange}\n                    />\n                    <span key={option.value} className={value === option.value ? css.selected : undefined}>\n                        {option.label}\n                    </span>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default RadioGroup;\n","// extracted by mini-css-extract-plugin\nexport default {\"dailyCaloriesContent\":\"DailyCalorieIntake_dailyCaloriesContent__fTJjz\",\"intake\":\"DailyCalorieIntake_intake__634gs\",\"vector\":\"DailyCalorieIntake_vector__-Il6-\",\"caloriesIntake\":\"DailyCalorieIntake_caloriesIntake__36yNI\"};","import css from './DailyCalorieIntake.module.css'\nimport iconSvg from './../../assets/images/icons.svg'\nimport { useSelector } from 'react-redux'\nimport { getUser } from '../../redux/user/selector'\n\nconst DailyCalorieIntake = ({ calorieIntake, onClose }) => {\n  const user = useSelector(getUser);\n  const foods = user.foodNotRecommended; // useSelector(getFoodNotRecommended)\n  /* const calculateIntake = () => {\n     //\n     return 10 * currentWeight + 6.25 * height - 5 * age - 161 - 10 * (currentWeight - desiredWeight)\n   }*/\n  return (\n    <div className={css.dailyCaloriesContent}>\n      <h1>Your recommended daily calorie intake is</h1>\n      <div>\n        <span className={css.caloriesIntake}>\n          {user.dailyCalorieIntake}\n          <p className={css.intake}>CALORIES</p>\n        </span>\n      </div>\n      <div className={css.vector}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"330\"\n          height=\"2\"\n          viewBox=\"0 0 330 2\"\n          fill=\"none\"\n        >\n          <use href={`${iconSvg}#vector4`}/>\n        </svg>\n        <h2>Foods you should not eat</h2>\n      </div>\n      <div>\n        <ol>\n          {foods.map((food, index) => (\n            <li key={index}>{food}</li>\n          ))}\n        </ol>\n      </div>\n      <button className=\"button\" onClick={onClose} >Start losing weight</button>\n\n    </div>\n  )\n}\n\nexport default DailyCalorieIntake\n","import css from './DailyCaloriesForm.module.css';\nimport { TextField } from '../TextField/TextField';\nimport RadioGroup from '../RadioGroup/RadioGroup';\nimport React, { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport DailyCalorieIntake from '../DailyCalorieIntake/DailyCalorieIntake';\nimport { useDispatch } from 'react-redux';\nimport { calculateCalorieIntake } from '../../redux/user/operations';\n\nexport const DailyCaloriesForm = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({});\n  const [isOpen, setIsOpen] = useState(false);\n  const openModal = () => setIsOpen(true);\n  const closeModal = () => setIsOpen(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await dispatch(calculateCalorieIntake(formData)).unwrap();\n      openModal();\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  const handleChange = (value, field) => {\n    // setSelectedValue(+event.target.value);\n\n    setFormData({\n      ...formData,\n      [field]: value,\n    })\n  }\n  const options = [\n    { value: 1, label: '1' },\n    { value: 2, label: '2' },\n    { value: 3, label: '3' },\n    { value: 4, label: '4' },\n  ]\n\n  return (<>\n      <Modal children={<DailyCalorieIntake onClose={closeModal} calorieIntake={100}/>} isOpen={isOpen} onClose={closeModal}/>\n      <div className={css.container}>\n        <h1>Calculate your daily calorie\n          intake right now</h1>\n        <form className={css.form} onSubmit={handleSubmit}>\n          <div className={css.infoContainer}>\n            <div className={css.info}>\n              <TextField className={css.textField} onChange={e => handleChange(+e.target.value, 'height')}\n                type=\"number\" label=\"Height *\" id=\"height\"/>\n              <TextField className={css.textField} onChange={e => handleChange(+e.target.value, 'age')}\n                type=\"number\" label=\"Age *\" id=\"age\"/>\n              <TextField className={css.textField}\n                onChange={e => handleChange(+e.target.value, 'currentWeight')} type=\"number\"\n                label=\"Current weight *\" id=\"current-weight\"/>\n            </div>\n            <div className={css.info}>\n              <TextField className={css.textField}\n                onChange={e => handleChange(+e.target.value, 'desiredWeight')} type=\"number\"\n                label=\"Desired weight *\" id=\"desired-weight\"/>\n              <div className={css.bloodTypeContainer}>\n                <span>Blood type*</span>\n                <div>\n                  <RadioGroup value={+formData['bloodType']}\n                    onChange={e => handleChange(+e.target.value, 'bloodType')} name=\"blood-type\"\n                    options={options}/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={css.button}>\n            <button className=\"button\" type=\"submit\">Start losing weight</button>\n          </div>\n        </form>\n      </div>\n    </>\n  )\n\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"Modal_modalOverlay__ZrB5u\",\"modalContainer\":\"Modal_modalContainer__QjqZb\",\"actionContainer\":\"Modal_actionContainer__wmtRH\",\"modalCloseButton\":\"Modal_modalCloseButton__Hazzk\",\"modalContent\":\"Modal_modalContent__axM59\"};","import React, { useEffect } from 'react';\nimport css from './Modal.module.css';\nimport iconSvg from \"../../assets/images/icons.svg\";\n\nconst Modal = ({ isOpen, onClose, children }) => {\n    // Function to handle keydown event\n    const handleKeyDown = e => {\n        if (e.key === 'Escape') {\n            onClose();\n        }\n    };\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    });\n\n    if (!isOpen) return null;\n\n    const handleBackdropClick = e => {\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    };\n\n    return (\n        <div className={css.modalOverlay} onClick={handleBackdropClick}>\n            <div className={css.modalContainer}>\n                <div className={css.actionContainer}>\n                    <svg  width=\"12\" height=\"7\" onClick={onClose}>\n                        <use href={`${iconSvg}#return`}/>\n                    </svg>\n                    <button className={css.modalCloseButton} onClick={onClose}>\n                        &times;\n                    </button>\n                </div>\n\n                <div className={css.modalContent}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputContainer\":\"TextField_inputContainer__ubnUk\",\"highlight\":\"TextField_highlight__Ii8kk\",\"textField\":\"TextField_textField__Ijesv\",\"label\":\"TextField_label__vkJH3\"};","import css from './TextField.module.css';\nimport clsx from 'clsx';\n\nexport const TextField = ({label, id, className, type, onChange, value}) => {\n    return (\n        <div className={clsx(css.inputContainer, className)}>\n            <input onChange={onChange} value={value} type={type} className={css.textField} id={id} placeholder=\" \" required/>\n            <label className={css.label} htmlFor={id}>{label}</label>\n            {label && <span className={css.highlight}></span>}\n        </div>\n    )\n};\n","import {DailyCaloriesForm} from \"../../components/DailyCaloriesForm/DailyCaloriesForm\";\n\nconst MainPage = () => {\n    return (\n        <div>\n            <DailyCaloriesForm/>\n        </div>\n    )\n}\n\nexport default MainPage;\n"],"names":["_ref","options","name","value","onChange","_jsx","className","css","children","map","option","i","_jsxs","type","checked","undefined","label","calorieIntake","onClose","user","useSelector","getUser","foods","foodNotRecommended","dailyCalorieIntake","xmlns","width","height","viewBox","fill","href","iconSvg","food","index","onClick","DailyCaloriesForm","dispatch","useDispatch","formData","setFormData","useState","isOpen","setIsOpen","closeModal","handleChange","field","_Fragment","Modal","DailyCalorieIntake","onSubmit","async","e","preventDefault","calculateCalorieIntake","unwrap","ex","console","log","TextField","target","id","RadioGroup","handleKeyDown","key","useEffect","document","addEventListener","removeEventListener","currentTarget","clsx","placeholder","required","htmlFor","MainPage"],"sourceRoot":""}