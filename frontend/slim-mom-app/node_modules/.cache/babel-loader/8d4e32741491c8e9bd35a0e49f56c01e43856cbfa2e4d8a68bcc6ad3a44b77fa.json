{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth/authSlice';\n/*import { categoriesReducer } from './categories/categoriesSlice';\r\nimport { transactionsReducer } from './transactions/transactionsSlice';\r\nimport { filterReducer } from './filterSlice';\r\nimport { userReducer } from './user/userSlice';*/\n\n// Persisting token field from auth slice to localstorage\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token', 'refreshToken', 'sid', 'user']\n};\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer)\n    /*user: userReducer,\r\n    categories: categoriesReducer,\r\n    transactions: transactionsReducer,\r\n    filter: filterReducer,*/\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","authReducer","authPersistConfig","key","whitelist","store","reducer","auth","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/GoIT/Modules/Team Project/slim-mom/frontend/slim-mom-app/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from './auth/authSlice';\r\n/*import { categoriesReducer } from './categories/categoriesSlice';\r\nimport { transactionsReducer } from './transactions/transactionsSlice';\r\nimport { filterReducer } from './filterSlice';\r\nimport { userReducer } from './user/userSlice';*/\r\n\r\n// Persisting token field from auth slice to localstorage\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token', 'refreshToken', 'sid', 'user'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    /*user: userReducer,\r\n    categories: categoriesReducer,\r\n    transactions: transactionsReducer,\r\n    filter: filterReducer,*/\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAC/G,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA;AACA;AACA;;AAEA;AACA,MAAMC,iBAAiB,GAAG;EACxBC,GAAG,EAAE,MAAM;EACXH,OAAO;EACPI,SAAS,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,KAAK,EAAE,MAAM;AACpD,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGd,cAAc,CAAC;EAClCe,OAAO,EAAE;IACPC,IAAI,EAAEd,cAAc,CAACS,iBAAiB,EAAED,WAAW;IACnD;AACJ;AACA;AACA;EACE,CAAC;EACDO,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACjB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMa,SAAS,GAAGpB,YAAY,CAACa,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}