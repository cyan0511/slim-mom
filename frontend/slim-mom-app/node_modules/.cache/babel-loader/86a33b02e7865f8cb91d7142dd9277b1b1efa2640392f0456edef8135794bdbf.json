{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\naxios.defaults.baseURL = 'http://localhost:3001';\n\n// Utility to add JWT\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\n// Utility to remove JWT\nconst clearAuthHeader = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\n/*\r\n * POST @ /users/signup\r\n * body: { name, email, password }\r\n */\nexport const register = createAsyncThunk('auth/register', async ({\n  name,\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    await axios.post('/auth/register', {\n      name,\n      email,\n      password\n    });\n    // After successful registration, add the token to the HTTP header\n    // setAuthHeader(res.data.token);\n    // return res.data;\n    const loginResponse = await thunkAPI.dispatch(logIn({\n      email,\n      password\n    }));\n    return loginResponse.payload; // Return the login response payload\n  } catch (error) {\n    var _error$response;\n    const status = error.response.status;\n    const {\n      message\n    } = (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data;\n    return thunkAPI.rejectWithValue({\n      status,\n      message\n    });\n  }\n});\n\n/*\r\n * POST @ /users/login\r\n * body: { email, password }\r\n */\nexport const logIn = createAsyncThunk('auth/login', async ({\n  email,\n  password\n}, thunkAPI) => {\n  try {\n    const res = await axios.post('/auth/login', {\n      email,\n      password\n    });\n    const {\n      accessToken,\n      refreshToken,\n      sid,\n      user\n    } = res.data;\n\n    // After successful login, add the token to the HTTP header\n    setAuthHeader(accessToken);\n    return {\n      user,\n      accessToken,\n      refreshToken,\n      sid\n    };\n  } catch (error) {\n    var _error$response2;\n    const status = error.response.status;\n    const {\n      message\n    } = (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data;\n    return thunkAPI.rejectWithValue({\n      status,\n      message\n    });\n  }\n});\n\n/*\r\n * POST @ /users/logout\r\n * headers: Authorization: Bearer token\r\n */\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.get('/auth/logout');\n    // After a successful logout, remove the token from the HTTP header\n    clearAuthHeader();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\n/*\r\n * GET @ /users/current\r\n * headers: Authorization: Bearer token\r\n */\nexport const refreshToken = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n  // Reading the token from the state via getState()\n  const state = thunkAPI.getState();\n  const persistedRefreshToken = state.auth.refreshToken;\n  const sid = state.auth.sid;\n  if (!persistedRefreshToken || !sid) {\n    return thunkAPI.rejectWithValue('Unable to refresh token: Missing token or SID');\n  }\n  try {\n    // If there is a token, add it to the HTTP header and perform the request\n    setAuthHeader(persistedRefreshToken);\n    const res = await axios.post('/auth/refresh', {\n      sid\n    });\n    const {\n      accessToken,\n      refreshToken: newRefreshToken,\n      sid: newSid\n    } = res.data;\n\n    // Set the new access token in the Authorization header\n    setAuthHeader(accessToken);\n    return {\n      accessToken,\n      refreshToken: newRefreshToken,\n      sid: newSid\n    };\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["axios","createAsyncThunk","defaults","baseURL","setAuthHeader","token","headers","common","Authorization","clearAuthHeader","register","name","email","password","thunkAPI","post","loginResponse","dispatch","logIn","payload","error","_error$response","status","response","message","data","rejectWithValue","res","accessToken","refreshToken","sid","user","_error$response2","logOut","_","get","state","getState","persistedRefreshToken","auth","newRefreshToken","newSid"],"sources":["D:/GoIT/Modules/Team Project/slim-mom/frontend/slim-mom-app/src/redux/auth/authOperations.js"],"sourcesContent":["import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:3001';\r\n\r\n// Utility to add JWT\r\nconst setAuthHeader = token => {\r\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n};\r\n\r\n// Utility to remove JWT\r\nconst clearAuthHeader = () => {\r\n  axios.defaults.headers.common.Authorization = '';\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body: { name, email, password }\r\n */\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async ({ name, email, password }, thunkAPI) => {\r\n    try {\r\n      await axios.post('/auth/register', { name, email, password });\r\n      // After successful registration, add the token to the HTTP header\r\n      // setAuthHeader(res.data.token);\r\n      // return res.data;\r\n      const loginResponse = await thunkAPI.dispatch(logIn({ email, password }));\r\n      return loginResponse.payload; // Return the login response payload\r\n    } catch (error) {\r\n      const status = error.response.status;\r\n      const { message } = error.response?.data;\r\n      return thunkAPI.rejectWithValue({ status, message });\r\n    }\r\n  }\r\n);\r\n\r\n/*\r\n * POST @ /users/login\r\n * body: { email, password }\r\n */\r\nexport const logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async ({ email, password }, thunkAPI) => {\r\n    try {\r\n      const res = await axios.post('/auth/login', { email, password });\r\n      const { accessToken, refreshToken, sid, user } = res.data;\r\n\r\n      // After successful login, add the token to the HTTP header\r\n      setAuthHeader(accessToken);\r\n      return { user, accessToken, refreshToken, sid };\r\n    } catch (error) {\r\n      const status = error.response.status;\r\n      const { message } = error.response?.data;\r\n      return thunkAPI.rejectWithValue({ status, message });\r\n    }\r\n  }\r\n);\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers: Authorization: Bearer token\r\n */\r\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\r\n  try {\r\n    await axios.get('/auth/logout');\r\n    // After a successful logout, remove the token from the HTTP header\r\n    clearAuthHeader();\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers: Authorization: Bearer token\r\n */\r\nexport const refreshToken = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    // Reading the token from the state via getState()\r\n    const state = thunkAPI.getState();\r\n    const persistedRefreshToken = state.auth.refreshToken;\r\n    const sid = state.auth.sid;\r\n\r\n    if (!persistedRefreshToken || !sid) {\r\n      return thunkAPI.rejectWithValue(\r\n        'Unable to refresh token: Missing token or SID'\r\n      );\r\n    }\r\n\r\n    try {\r\n      // If there is a token, add it to the HTTP header and perform the request\r\n      setAuthHeader(persistedRefreshToken);\r\n      const res = await axios.post('/auth/refresh', { sid });\r\n\r\n      const {\r\n        accessToken,\r\n        refreshToken: newRefreshToken,\r\n        sid: newSid,\r\n      } = res.data;\r\n\r\n      // Set the new access token in the Authorization header\r\n      setAuthHeader(accessToken);\r\n\r\n      return { accessToken, refreshToken: newRefreshToken, sid: newSid };\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}